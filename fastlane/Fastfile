# Fastfile for MirrorSmoker (Fight The Smoke)
# Comprehensive App Store submission and metadata management

default_platform(:ios)

platform :ios do
  # ===== CONFIGURATION =====
  
  before_all do
    setup_circle_ci if ENV['CIRCLECI']
    ensure_git_clean if ENV['CI']
  end
  
  # ===== APP STORE METADATA =====
  
  desc "üìù Update App Store metadata and descriptions"
  lane :update_metadata do
    deliver(
      app_identifier: "com.mirror-labs.MirrorSmokerStopper",
      skip_screenshots: true,
      skip_binary_upload: true,
      force: true,
      edit_live: false,
      
      # App Store Information
      primary_category: "MEDICAL",
      secondary_category: "HEALTH_AND_FITNESS"
    )
    
    UI.success("‚úÖ App Store metadata updated successfully!")
  end
  
  # ===== SCREENSHOT MANAGEMENT =====
  
  desc "üì± Upload screenshots to App Store Connect"
  lane :upload_screenshots do
    deliver(
      app_identifier: "com.mirror-labs.MirrorSmokerStopper",
      skip_metadata: true,
      skip_binary_upload: true,
      skip_app_version_update: true,
      force: true,
      
      # Screenshots from your manual captures
      screenshots_path: "./screenshots",
      
      # Override previous screenshots
      overwrite_screenshots: true
    )
    
    UI.success("‚úÖ Screenshots uploaded to App Store Connect!")
  end
  
  # ===== BUILD LANES =====
  
  desc "üî® Build app for release"
  lane :build do
    # Increment build number
    increment_build_number(xcodeproj: "MirrorSmokerStopper.xcodeproj")
    
    # Build the app
    build_app(
      project: "MirrorSmokerStopper.xcodeproj",
      scheme: "MirrorSmokerStopper",
      configuration: "Release",
      clean: true,
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          "com.mirror-labs.MirrorSmokerStopper" => "MirrorSmokerStopper App Store",
          "com.mirror-labs.MirrorSmokerStopper.HomeWidget" => "HomeWidget App Store",
          "com.mirror-labs.MirrorSmokerStopper.watchkitapp" => "MirrorSmokerStopper Watch App Store"
        }
      },
      include_bitcode: false,
      include_symbols: true
    )
    
    UI.success("‚úÖ Build completed successfully!")
  end
  
  # ===== SUBMISSION LANES =====
  
  desc "üöÄ Submit to TestFlight"
  lane :beta do
    build
    
    upload_to_testflight(
      app_identifier: "com.mirror-labs.MirrorSmokerStopper",
      skip_waiting_for_build_processing: false,
      skip_submission: false,
      
      # Beta Review Information
      beta_app_review_info: {
        contact_email: "roberdan@microsoft.com",
        contact_first_name: "Roberto",
        contact_last_name: "D'Angelo",
        contact_phone: "+39 123 456 7890",
        demo_account_name: "",
        demo_account_password: "",
        notes: "Test version of Fight The Smoke - smoking tracker app with AI coaching features."
      },
      
      # Changelog for testers
      changelog: "üî• NEW AI COACH FEATURE\n‚Ä¢ Personalized insights and recommendations\n‚Ä¢ Smart pattern recognition\n‚Ä¢ Enhanced analytics dashboard\n‚Ä¢ Improved Apple Watch integration\n‚Ä¢ Performance optimizations"
    )
    
    UI.success("‚úÖ App submitted to TestFlight!")
  end
  
  desc "üè™ Submit to App Store"
  lane :release do
    build
    
    # Upload to App Store
    upload_to_app_store(
      app_identifier: "com.mirror-labs.MirrorSmokerStopper",
      force: true,
      skip_screenshots: false,
      skip_metadata: false,
      
      # Screenshots and metadata
      screenshots_path: "./screenshots",
      
      # Submission information
      submit_for_review: true,
      automatic_release: false,
      
      # App Review Information
      app_review_information: {
        first_name: "Roberto",
        last_name: "D'Angelo", 
        phone_number: "+39 123 456 7890",
        email_address: "roberdan@microsoft.com",
        demo_account_name: "",
        demo_account_password: "",
        notes: "Fight The Smoke is a comprehensive smoking tracker app with AI-powered coaching. The app helps users monitor their smoking habits, provides personalized insights, and supports their journey towards healthier lifestyle choices."
      },
      
      # Export compliance (no encryption)
      submission_information: {
        export_compliance_platform: 'ios',
        export_compliance_compliance_required: false,
        export_compliance_encryption_updated: false,
        export_compliance_app_type: nil,
        export_compliance_uses_encryption: false,
        export_compliance_is_exempt: false,
        export_compliance_contains_third_party_cryptography: false,
        export_compliance_contains_proprietary_cryptography: false,
        export_compliance_available_on_french_store: true,
        content_rights_has_rights: true,
        content_rights_contains_third_party_content: false,
        add_id_info_limits_tracking: true,
        add_id_info_serves_ads: false,
        add_id_info_tracks_action: true,
        add_id_info_tracks_install: false,
        add_id_info_uses_idfa: false
      }
    )
    
    UI.success("‚úÖ App submitted to App Store for review!")
  end
  
  # ===== UTILITY LANES =====
  
  desc "üßπ Clean up build artifacts"
  lane :clean do
    clean_build_artifacts
    UI.success("‚úÖ Build artifacts cleaned!")
  end
  
  desc "üìä Generate app info report"
  lane :info do
    version = get_version_number(xcodeproj: "MirrorSmokerStopper.xcodeproj")
    build_number = get_build_number(xcodeproj: "MirrorSmokerStopper.xcodeproj")
    
    UI.message("üîç APP INFORMATION:")
    UI.message("   App Name: Fight The Smoke")
    UI.message("   Bundle ID: com.mirror-labs.MirrorSmokerStopper")
    UI.message("   Version: #{version}")
    UI.message("   Build: #{build_number}")
    UI.message("   Xcode Project: MirrorSmokerStopper.xcodeproj")
  end
  
  desc "üîÑ Complete deployment workflow"
  lane :deploy do
    info
    update_metadata
    upload_screenshots
    release
    
    UI.success("üéâ Complete deployment finished!")
  end
  
  # ===== ERROR HANDLING =====
  
  error do |lane, exception|
    UI.error("‚ùå Error in lane '#{lane}': #{exception}")
    
    # Add custom error handling here
    # slack(message: "Build failed!", success: false) if ENV['SLACK_URL']
  end
  
  after_all do |lane|
    UI.success("‚úÖ Lane '#{lane}' completed successfully!")
  end
end