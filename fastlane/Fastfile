# Customise this file, documentation can be found here:
# https://docs.fastlane.tools/actions/
# All available actions: https://docs.fastlane.tools/actions

default_platform(:ios)

platform :ios do
  # Variables
  app_identifier = "com.mirror-labs.MirrorSmokerStopper"
  scheme = "MirrorSmokerStopper"
  workspace = "MirrorSmokerStopper.xcworkspace"
  project = "MirrorSmokerStopper.xcodeproj"
  
  desc "Generate new localized screenshots"
  lane :screenshots do
    capture_screenshots(
      project: project,
      scheme: scheme,
      devices: [
        "iPhone 16 Pro",
        "iPhone 16 Pro Max",
        "iPhone 14",
        "iPad Pro (13-inch) (M4)",
        "iPad Pro (11-inch) (M4)"
      ],
      languages: [
        "en-US",
        "de-DE", 
        "es-ES",
        "fr-FR",
        "it"
      ],
      clear_previous_screenshots: true,
      override_status_bar: true,
      skip_open_summary: true
    )
    
    frame_screenshots(
      silver: true,
      path: "./fastlane/screenshots"
    )
  end
  
  desc "Run tests"
  lane :test do
    run_tests(
      project: project,
      scheme: scheme,
      devices: ["iPhone 16 Pro"],
      clean: true,
      code_coverage: true
    )
  end
  
  desc "Setup automatic code signing (Xcode managed)"
  lane :sync_signing do
    # Use automatic signing - no Match needed
    # Xcode will handle certificates and provisioning profiles automatically
    UI.message("Using automatic code signing - Xcode managed certificates")
    
    # Optional: Setup App Store Connect API key if available
    if ENV["APP_STORE_CONNECT_API_KEY_ID"]
      app_store_connect_api_key(
        key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
        issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
        key_filepath: ENV["APP_STORE_CONNECT_API_KEY_PATH"]
      )
    end
  end
  
  desc "Build and upload to TestFlight"
  lane :beta do
    # Ensure we're on the right branch
    ensure_git_status_clean
    ensure_git_branch(branch: "development")
    
    # Increment build number
    increment_build_number(xcodeproj: project)
    
    # Get version number
    version = get_version_number(xcodeproj: project)
    build = get_build_number(xcodeproj: project)
    
    # Sync signing
    sync_signing
    
    # Build the app with automatic signing
    build_app(
      project: project,
      scheme: scheme,
      export_method: "app-store",
      export_options: {
        signingStyle: "automatic",
        uploadBitcode: false,
        uploadSymbols: true,
        compileBitcode: false
      },
      include_bitcode: false,
      include_symbols: true,
      clean: true,
      output_directory: "./build",
      output_name: "MirrorSmokerStopper.ipa"
    )
    
    # Upload to TestFlight
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      notify_external_testers: false,
      changelog: "Version #{version} (#{build})\n\nNew features and improvements",
      groups: ["Beta Testers"]
    )
    
    # Clean up
    clean_build_artifacts
    
    # Commit version bump
    commit_version_bump(
      message: "üöÄ Version bump to #{version} (#{build}) for TestFlight",
      xcodeproj: project
    )
    
    # Push to git
    push_to_git_remote
    
    # Notify
    notification(subtitle: "Deployed to TestFlight", message: "Version #{version} (#{build})")
  end
  
  desc "Deploy to App Store"
  lane :release do
    # Ensure we're on master
    ensure_git_status_clean
    ensure_git_branch(branch: "master")
    
    # Skip tests for now - enable when tests are ready
    # test
    
    # Take screenshots
    screenshots
    
    # Increment version
    increment_version_number(xcodeproj: project)
    increment_build_number(xcodeproj: project)
    
    version = get_version_number(xcodeproj: project)
    build = get_build_number(xcodeproj: project)
    
    # Sync signing
    sync_signing
    
    # Build
    build_app(
      project: project,
      scheme: scheme,
      export_method: "app-store",
      include_bitcode: false,
      include_symbols: true,
      clean: true,
      output_directory: "./build",
      output_name: "MirrorSmokerStopper.ipa"
    )
    
    # Upload screenshots and metadata
    deliver(
      submit_for_review: true,
      automatic_release: false,
      force: true,
      skip_binary_upload: false,
      skip_screenshots: false,
      skip_metadata: false,
      
      # Metadata
      app_version: version,
      copyright: "¬© 2024 FightTheStroke Foundation",
      primary_category: "HEALTH_AND_FITNESS",
      secondary_category: "MEDICAL",
      
      # Review information
      app_review_information: {
        first_name: "Roberto",
        last_name: "D'Angelo",
        phone_number: "+39 333 1234567",
        email_address: "info@fightthestroke.org",
        demo_user: "",
        demo_password: "",
        notes: "This app helps users quit smoking through tracking, AI coaching, and health insights."
      },
      
      # App rating
      app_rating_config_path: "./fastlane/metadata/app_rating.json",
      
      # Run precheck
      precheck_include_in_app_purchases: false,
      
      # Submission
      submission_information: {
        add_id_info_uses_idfa: false,
        add_id_info_serves_ads: false,
        add_id_info_tracks_action: false,
        add_id_info_tracks_install: false,
        content_rights_has_rights: true,
        content_rights_contains_third_party_content: false,
        export_compliance_platform: "ios",
        export_compliance_compliance_required: false,
        export_compliance_encryption_updated: false,
        export_compliance_uses_encryption: false
      }
    )
    
    # Create git tag
    add_git_tag(
      tag: "v#{version}",
      message: "Release version #{version} (#{build})"
    )
    
    # Push everything
    push_to_git_remote(
      remote_branch: "master",
      tags: true
    )
    
    # Notify
    notification(
      subtitle: "üöÄ Released to App Store!",
      message: "Version #{version} (#{build}) submitted for review"
    )
  end
  
  desc "Create App Store Connect app"
  lane :create_app do
    produce(
      username: ENV["APPLE_ID"],
      app_identifier: app_identifier,
      app_name: "Mirror Smoker Stopper",
      language: "English",
      app_version: "2.0.0",
      sku: "MIRRORSMOKER2024",
      platforms: ["ios", "appletvos", "osx"],
      
      # Enable services
      enable_services: {
        push_notification: "on",
        associated_domains: "on",
        data_protection: "complete",
        app_group: "on",
        healthkit: "on",
        inter_app_audio: "off",
        passbook: "off",
        in_app_purchase: "on",
        cloud_kit: "on"
      }
    )
  end
  
  desc "Download metadata from App Store Connect"
  lane :download_metadata do
    deliver(
      download_metadata: true,
      download_screenshots: true,
      force: true,
      username: ENV["APPLE_ID"],
      app_identifier: app_identifier
    )
  end
  
  desc "Upload only metadata to App Store Connect"
  lane :upload_metadata do
    deliver(
      skip_binary_upload: true,
      skip_screenshots: true,
      skip_metadata: false,
      force: true,
      
      # Metadata
      app_version: get_version_number(xcodeproj: project, target: "MirrorSmokerStopper"),
      copyright: "¬© 2025 FightTheStroke Foundation",
      primary_category: "HEALTH_AND_FITNESS",
      secondary_category: "MEDICAL"
    )
  end

  desc "Quick release without tests (for initial submission)"
  lane :quick_release do
    # Skip tests and git checks for quick deployment
    
    # Take screenshots
    screenshots
    
    # Increment version
    increment_version_number(xcodeproj: project)
    increment_build_number(xcodeproj: project)
    
    version = get_version_number(xcodeproj: project, target: "MirrorSmokerStopper")
    build = get_build_number(xcodeproj: project)
    
    # Upload metadata only (no binary)
    deliver(
      skip_binary_upload: true,
      submit_for_review: false,
      automatic_release: false,
      force: true,
      skip_screenshots: false,
      skip_metadata: false,
      
      # Metadata
      app_version: version,
      copyright: "¬© 2025 FightTheStroke Foundation",
      primary_category: "HEALTH_AND_FITNESS",
      secondary_category: "MEDICAL"
    )
    
    # Notify
    notification(
      subtitle: "üìÑ Metadata uploaded!",
      message: "Version #{version} (#{build}) metadata ready"
    )
  end

  desc "Validate app before submission"
  lane :validate do
    precheck(
      app_identifier: app_identifier,
      username: ENV["APPLE_ID"]
    )
  end
  
  # Error handling
  error do |lane, exception|
    notification(
      subtitle: "‚ùå Fastlane error",
      message: "Lane #{lane} failed: #{exception.message}"
    )
  end
end